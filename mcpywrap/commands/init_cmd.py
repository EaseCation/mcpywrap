# -*- coding: utf-8 -*-

"""
ÂàùÂßãÂåñÂëΩ‰ª§Ê®°Âùó
"""
import os
import click
from pathlib import Path
from ..config import update_config, config_exists
from ..utils.utils import ensure_dir
from ..minecraft.addons import setup_minecraft_addon, is_minecraft_addon_project
from ..minecraft.map import setup_minecraft_map, is_minecraft_map_project
from ..utils.print_guide import print_guide
from ..utils.project_setup import (
    get_default_author, get_default_email, get_default_project_name, find_behavior_pack_dir,
    update_behavior_pack_config, install_project_dev_mode
)
from ..minecraft.template.mod_template import open_ui_crate_mod


@click.command()
def init_cmd():
    """‰∫§‰∫íÂºèÂàùÂßãÂåñÈ°πÁõÆÔºåÂàõÂª∫Âü∫Á°ÄÁöÑÂåÖ‰ø°ÊÅØÂèäÈÖçÁΩÆ"""
    init()

def init():
    if config_exists():
        if not click.confirm(click.style('‚ö†Ô∏è  ÈÖçÁΩÆÊñá‰ª∂Â∑≤Â≠òÂú®ÔºåÊòØÂê¶Ë¶ÜÁõñÔºü', fg='yellow', bold=True), default=False):
            click.echo(click.style('üö´ ÂàùÂßãÂåñÂ∑≤ÂèñÊ∂à', fg='red'))
            return

    click.echo(click.style('üéâ Ê¨¢Ëøé‰ΩøÁî® mcpywrap ÂàùÂßãÂåñÂêëÂØºÔºÅ', fg='bright_green', bold=True))

    # Ëé∑ÂèñÈ°πÁõÆ‰ø°ÊÅØÔºà‰ªÖÊèêÁ§∫ÂøÖË¶Å‰ø°ÊÅØÔºâ
    default_project_name = get_default_project_name()
    project_name = click.prompt(click.style('üì¶ ËØ∑ËæìÂÖ•È°πÁõÆÂêçÁß∞', fg='cyan'), default=default_project_name, type=str, show_default=True)
    project_version = click.prompt(click.style('üî¢ ËØ∑ËæìÂÖ•È°πÁõÆÁâàÊú¨', fg='cyan'), default='0.1.0', type=str)
    project_description = click.prompt(click.style('üìù ËØ∑ËæìÂÖ•È°πÁõÆÊèèËø∞', fg='cyan'), default='', type=str)
    
    # Ëá™Âä®Ëé∑Âèñ‰ΩúËÄÖ‰ø°ÊÅØ
    default_author = get_default_author()
    author = click.prompt(click.style('üë§ ËØ∑ËæìÂÖ•‰ΩúËÄÖÂêçÁß∞', fg='cyan'), default=default_author, type=str, show_default=True)
    
    # ÊòæÁ§∫È´òÁ∫ßÈÄâÈ°πÊ†áÈ¢ò
    if click.confirm(click.style('‚ùì ÊòØÂê¶ÈÖçÁΩÆÈ´òÁ∫ßÈ°πÁõÆËÆæÁΩÆÔºüÔºàÂåÖÊã¨ÈÇÆÁÆ±„ÄÅURL„ÄÅËÆ∏ÂèØËØÅ„ÄÅPythonÁâàÊú¨Ë¶ÅÊ±ÇÁ≠âÔºâ', fg='magenta'), default=False):
        default_email = get_default_email()
        author_email = click.prompt(click.style('üìß ËØ∑ËæìÂÖ•‰ΩúËÄÖÈÇÆÁÆ±', fg='cyan'), default=default_email, type=str, show_default=True)
        project_url = click.prompt(click.style('üîó ËØ∑ËæìÂÖ•È°πÁõÆURL', fg='cyan'), default='', type=str)
        license_name = click.prompt(click.style('üìú ËØ∑ËæìÂÖ•ËÆ∏ÂèØËØÅÁ±ªÂûã', fg='cyan'), default='MIT', type=str)
        python_requires = click.prompt(click.style('üêç ËØ∑ËæìÂÖ•PythonÁâàÊú¨Ë¶ÅÊ±Ç', fg='cyan'), default='>=3.6', type=str)    
    else:
        # ËÆæÁΩÆÈªòËÆ§ÂÄº
        author_email = get_default_email()
        project_url = ''
        license_name = 'MIT'
        python_requires = '>=3.6'

    # Ëé∑Âèñ‰æùËµñÂàóË°®
    dependencies = []
    click.echo(click.style('üìö ËØ∑ËæìÂÖ•È°πÁõÆ‰æùËµñÂåÖÔºàÂÖ∂‰ªñÈúÄË¶ÅÊâìÂåÖÂà∞ÂÖ•Ê≠§È°πÁõÆÁöÑmcpywrapÈ°πÁõÆÔºâÔºåÊØèË°å‰∏Ä‰∏™ÔºàËæìÂÖ•Á©∫Ë°åÁªìÊùüÔºâ:', fg='cyan'))
    while True:
        dep = click.prompt(click.style('‚ûï ‰æùËµñ', fg='bright_blue'), default='', show_default=False)
        if not dep:
            break
        dependencies.append(dep)
    
    # ËØ¢ÈóÆÊòØÂê¶‰ΩøÁî®3to2ËΩ¨Êç¢
    use_3to2 = click.confirm(click.style('‚ùì ÊòØÂê¶‰ΩøÁî®3to2Ëá™Âä®Â∞ÜPython 3‰ª£Á†ÅËΩ¨Êç¢‰∏∫Python 2Ôºü', fg='magenta'), default=False)
    if use_3to2:
        click.echo(click.style('‚ÑπÔ∏è Â∑≤ÂêØÁî®3to2ËΩ¨Êç¢ÔºåÊûÑÂª∫Êó∂Â∞ÜËá™Âä®ËΩ¨Êç¢Python‰ª£Á†Å', fg='cyan'))
    else:
        click.echo(click.style('‚ÑπÔ∏è Â∑≤Á¶ÅÁî®3to2ËΩ¨Êç¢ÔºåÊûÑÂª∫Êó∂Â∞Ü‰øùÊåÅÂéüÂßãPythonÁâàÊú¨', fg='cyan'))
    
    base_dir = os.getcwd()
    behavior_pack_dir = None
    minecraft_addon_info = {}
    minecraft_map_info = {}
    target_dir = None
    project_type = "addon"  # ÈªòËÆ§È°πÁõÆÁ±ªÂûã
    
    # Ëá™Âä®Ê£ÄÊµãÈ°πÁõÆÁ±ªÂûã
    is_map = is_minecraft_map_project(base_dir)
    is_addon = is_minecraft_addon_project(base_dir)
    
    # Â¶ÇÊûúÊó¢‰∏çÊòØÂú∞Âõæ‰πü‰∏çÊòØÊèí‰ª∂ÔºåÂàôËØ¢ÈóÆÁî®Êà∑Ë¶ÅÂàõÂª∫ÁöÑÈ°πÁõÆÁ±ªÂûã
    if not is_map and not is_addon:
        project_type_choices = [
            ('addon', 'ÂàõÂª∫MinecraftÊèí‰ª∂È°πÁõÆ (Addon)'),
            ('map', 'ÂàõÂª∫MinecraftÂú∞ÂõæÂ≠òÊ°£È°πÁõÆ (Map)')
        ]
        
        click.echo(click.style('üìã ËØ∑ÈÄâÊã©È°πÁõÆÁ±ªÂûãÔºö', fg='bright_magenta'))
        for i, (code, desc) in enumerate(project_type_choices):
            click.echo(click.style(f"  {i+1}. {desc}", fg='bright_blue'))
        
        choice = click.prompt(
            click.style('üëâ ËØ∑ÈÄâÊã©', fg='bright_magenta'), 
            type=click.Choice(['1', '2']), 
            show_choices=False
        )
        project_type = project_type_choices[int(choice)-1][0]
    elif is_map:
        project_type = "map"
        click.echo(click.style('üîç Ê£ÄÊµãÂà∞Â∑≤Êúâ Minecraft Map È°πÁõÆÁªìÊûÑ', fg='magenta'))
    elif is_addon:
        project_type = "addon"
    
    # Ê†πÊçÆÈ°πÁõÆÁ±ªÂûãËøõË°åÂØπÂ∫îÁöÑÂàùÂßãÂåñ
    if project_type == "map":
        if is_map:
            click.echo(click.style('‚úÖ Â∑≤Ê£ÄÊµãÂà∞Âú∞ÂõæÂ≠òÊ°£ÁªìÊûÑ', fg='green'))
        else:
            if click.confirm(click.style('‚ùì ÊòØÂê¶ÂàõÂª∫ Minecraft Âú∞ÂõæÂ≠òÊ°£Âü∫Á°ÄÊ°ÜÊû∂Ôºü', fg='magenta'), default=True):
                click.echo(click.style('üß± Ê≠£Âú®ÂàõÂª∫ Minecraft Âú∞ÂõæÂ≠òÊ°£Âü∫Á°ÄÊ°ÜÊû∂...', fg='magenta'))
                
                # ËØ¢ÈóÆÊ∏∏ÊàèÊ®°Âºè
                game_type_choices = [
                    (0, "ÁîüÂ≠òÊ®°Âºè"),
                    (1, "ÂàõÈÄ†Ê®°Âºè"),
                    (2, "ÂÜíÈô©Ê®°Âºè")
                ]
                
                click.echo(click.style('üìã ËØ∑ÈÄâÊã©Ê∏∏ÊàèÊ®°ÂºèÔºö', fg='bright_blue'))
                for i, (code, desc) in enumerate(game_type_choices):
                    click.echo(click.style(f"  {i+1}. {desc}", fg='bright_blue'))
                    
                game_choice = click.prompt(
                    click.style('üëâ ËØ∑ÈÄâÊã©', fg='bright_magenta'), 
                    type=click.Choice(['1', '2', '3']),
                    show_choices=False
                )
                game_type = game_type_choices[int(game_choice)-1][0]
                
                minecraft_map_info = setup_minecraft_map(
                    base_dir,
                    project_name,
                    project_description,
                    game_type
                )
                
                click.echo(click.style('‚úÖ Minecraft Âú∞ÂõæÂ≠òÊ°£Âü∫Á°ÄÊ°ÜÊû∂ÂàõÂª∫ÊàêÂäüÔºÅ', fg='green'))
                click.echo(click.style(f'üìÇ Âú∞ÂõæË∑ØÂæÑ: {minecraft_map_info["map_path"]}', fg='green'))
    else:  # project_type == "addon"
        # Ê£ÄÊü•ÊòØÂê¶‰∏∫Minecraft addonÈ°πÁõÆ
        if is_minecraft_addon_project(base_dir):
            click.echo(click.style('üîç Ê£ÄÊµãÂà∞Â∑≤Êúâ Minecraft Addon È°πÁõÆÁªìÊûÑ', fg='magenta'))
            behavior_pack_dir = find_behavior_pack_dir(base_dir)
            if behavior_pack_dir:
                click.echo(click.style(f'‚úÖ ÊâæÂà∞Ë°å‰∏∫ÂåÖÁõÆÂΩï: {behavior_pack_dir}', fg='green'))
            else:
                click.echo(click.style('‚ö†Ô∏è Êó†Ê≥ïÊâæÂà∞Ë°å‰∏∫ÂåÖÁõÆÂΩï', fg='yellow'))
        else:
            if click.confirm(click.style('‚ùì ÊòØÂê¶ÂàõÂª∫ Minecraft addon Âü∫Á°ÄÊ°ÜÊû∂Ôºü', fg='magenta'), default=True):
                click.echo(click.style('üß± Ê≠£Âú®ÂàõÂª∫ Minecraft addon Âü∫Á°ÄÊ°ÜÊû∂...', fg='magenta'))
                minecraft_addon_info = setup_minecraft_addon(
                    base_dir, 
                    project_name, 
                    project_description, 
                    project_version
                )
                click.echo(click.style('‚úÖ Minecraft Addon Âü∫Á°ÄÊ°ÜÊû∂ÂàõÂª∫ÊàêÂäüÔºÅ', fg='green'))
                click.echo(click.style(f'üìÇ ËµÑÊ∫êÂåÖ: {minecraft_addon_info["resource_pack"]["path"]}', fg='green'))
                click.echo(click.style(f'üìÇ Ë°å‰∏∫ÂåÖ: {minecraft_addon_info["behavior_pack"]["path"]}', fg='green'))
                behavior_pack_dir = minecraft_addon_info["behavior_pack"]["path"]

        # Ê£ÄÊü•Ë°å‰∏∫ÂåÖ‰∏≠ÊòØÂê¶Êúâ‰ªªÊÑèPythonÂåÖ
        if behavior_pack_dir:
            if not any(file.endswith('.py') for file in os.listdir(behavior_pack_dir)):
                if click.confirm(click.style('‚ö†Ô∏è ÊòØÂê¶‰ΩøÁî®Ê®°ÊùøÂàõÂª∫ Mod Âü∫Á°Ä Python ËÑöÊú¨Ê°ÜÊû∂Ôºü', fg='yellow'), default=True):
                    open_ui_crate_mod(behavior_pack_dir)

    # ÊûÑÂª∫ÁõÆÂΩï
    target_dir = click.prompt(click.style('üìÇ ÈªòËÆ§ÊûÑÂª∫ÁõÆÂΩï', fg='cyan'), default='./build', type=str)
    
    # ÊûÑÂª∫Á¨¶Âêà PEP 621 Ê†áÂáÜÁöÑÈÖçÁΩÆ
    config = {
        'build-system': {
            'requires': ["setuptools>=42", "wheel"],
            'build-backend': "setuptools.build_meta"
        },
        'project': {
            'name': project_name,
            'version': project_version,
            'description': project_description,
            'authors': [{'name': author}],
            'readme': "README.md",
            'requires-python': python_requires,
            'dependencies': dependencies,
            'license': {'text': license_name},
            'classifiers': [
                f"License :: OSI Approved :: {license_name} License",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
            ]
        },
        'tool': {
            'mcpywrap': {
                'use_3to2': use_3to2,
                'project_type': project_type
            }
        }
    }
    
    if author_email:
        if not config['project'].get('authors'):
            config['project']['authors'] = []
        if not config['project']['authors']:
            config['project']['authors'].append({'name': author, 'email': author_email})
        else:
            config['project']['authors'][0]['email'] = author_email
    
    if project_url:
        config['project']['urls'] = {'Homepage': project_url}
    
    # Â¶ÇÊûúÊòØaddonÁ±ªÂûãÔºåÊõ¥Êñ∞Ë°å‰∏∫ÂåÖÈÖçÁΩÆ
    if project_type == "addon" and behavior_pack_dir:
        rel_path = update_behavior_pack_config(config, base_dir, behavior_pack_dir, target_dir)
        click.echo(click.style(f'üì¶ Â∑≤ÈÖçÁΩÆËá™Âä®ÂåÖÂèëÁé∞‰∫é: {rel_path}', fg='green'))

    # ÂàõÂª∫.gitignoreÊñá‰ª∂
    if click.confirm(click.style('‚ùì ÊòØÂê¶ÂàõÂª∫.gitignoreÊñá‰ª∂ÔºüÔºàÂåÖÂê´PythonÂíåÊûÑÂª∫ÁõÆÂΩïÁöÑÂøΩÁï•È°πÔºâ', fg='magenta'), default=True):
        gitignore_content = """# PythonÁõ∏ÂÖ≥
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# ËôöÊãüÁéØÂ¢É
.env
.venv
venv/
ENV/
env.bak/
venv.bak/

# IDEÁõ∏ÂÖ≥
.idea/
.vscode/
*.swp
*.swo
.mcs
studio.json
work.mcscfg

# Minecraft Addon ÊûÑÂª∫ÁõÆÂΩï
/build/
.runtime/
"""
        gitignore_path = Path(base_dir) / '.gitignore'
        if gitignore_path.exists():
            if click.confirm(click.style('‚ö†Ô∏è  .gitignoreÊñá‰ª∂Â∑≤Â≠òÂú®ÔºåÊòØÂê¶Ë¶ÜÁõñÔºü', fg='yellow'), default=False):
                gitignore_path.write_text(gitignore_content)
                click.echo(click.style('‚úÖ .gitignoreÊñá‰ª∂Â∑≤Êõ¥Êñ∞ÔºÅ', fg='green'))
        else:
            gitignore_path.write_text(gitignore_content)
            click.echo(click.style('‚úÖ .gitignoreÊñá‰ª∂Â∑≤ÂàõÂª∫ÔºÅ', fg='green'))
    
    update_config(config)
    click.echo(click.style(f'‚úÖ ÂàùÂßãÂåñÂÆåÊàêÔºÅÈÖçÁΩÆÊñá‰ª∂Â∑≤Êõ¥Êñ∞Âà∞ pyproject.toml (È°πÁõÆÁ±ªÂûã: {project_type})', fg='green'))
    
    # ‰ΩøÁî®pipÂÆâË£ÖÈ°πÁõÆÔºàÂèØÁºñËæëÊ®°ÂºèÔºâ
    install_project_dev_mode()

    # Êåá‰ª§‰ΩøÁî®ÊåáÂçó
    print_guide()